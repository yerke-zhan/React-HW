import React, {useState} from 'react';
import '../index.css';



export default function FeedbackForm() {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const[message, setMessage] = useState('');
  const[comment, setComment] = useState('');
  const[rating, setRating] = useState('');
  const[reason, setReason] = useState('');
  const [submitted, setSubmitted] = useState(false);
  


  const nameValidation =/^[A-Za-z–ê-–Ø–∞-—è–Å—ë“∞“±“Æ“Ø“ö“õ“í“ì”®”©“∫“ª–Ü—ñ”ò”ô\s'-]+$/
  
  
    
  const handleSubmit = (e) => {
    e.preventDefault();
    let res = {name,email,comment}
    console.log( 'Result:',res)
    if(!nameValidation.test(name) ) {
      setMessage('–ê—Ç—ã –∂”©–Ω—ñ“£—ñ–∑ —Ç–µ–∫ ”ô—Ä—ñ–ø—Ç–µ—Ä–¥–µ–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫!');
      return
    }
    if (!email) {
        alert("Email —Ç–∞“£–¥–∞“£—ã–∑!");
        return;
    }
    
    if (!comment) {
        alert("–ü—ñ–∫—ñ—Ä —Ç–∞“£–¥–∞“£—ã–∑!");
        return;
    }
    
    if (rating < 3 && !reason) {
        alert("–¢”©–º–µ–Ω –±–∞“ì–∞ “Ø—à—ñ–Ω —Å–µ–±–µ–±—ñ–Ω –∂–∞–∑—ã“£—ã–∑!");
        return;
    }
    setSubmitted(true);
    
    
    
    setMessage('')
    setEmail('')
    setName('')
    setComment('')
    setRating('');
    setReason('');
   
  };
   

  return (
    <div className='form'>
        {submitted ? (
                <p style={{color:'green', backgroundColor:'#f2f2f2', padding:'10px', margin:'10px'}}>–†–∞—Ö–º–µ—Ç, —Å—ñ–∑–¥—ñ“£ –ø—ñ–∫—ñ—Ä—ñ“£—ñ–∑ –º–∞“£—ã–∑–¥—ã!üòä </p>
            ) : (
                <>
      <h2>–ö–µ—Ä—ñ –ë–∞–π–ª–∞–Ω—ã—Å –§–æ—Ä–º–∞—Å—ã</h2>
      <form onSubmit={handleSubmit}>
        <div className='email-box'> 
        <label htmlFor=''>–ê—Ç—ã –∂”©–Ω—ñ:</label>
        <input type="text" 
        value={name} 
        onChange={(e) => setName(e.target.value)} 
         />
      

        <label htmlFor=''>Email:</label>
        <input type="email"  
        value={email}
        onChange={(e) => setEmail(e.target.value)} 

         />
        </div>
       
        <div className='pikir'>
          <label htmlFor="">–ü—ñ–∫—ñ—Ä—ñ“£—ñ–∑</label>
          <textarea name="" id=""
          value={comment}
          onChange={(e) => setComment(e.target.value)}
          minLength={20}/>
        </div>
        <label>–ë–∞“ì–∞“£—ã–∑–¥—ã “õ–æ–π—ã“£—ã–∑:</label>
        <select value={rating} onChange={(e) => setRating(e.target.value)} >
        <option value="">–¢–∞“£–¥–∞“£—ã–∑</option>
        <option value="1">‚≠ê</option>
        <option value="2">‚≠ê‚≠ê(–ù–∞—à–∞—Ä)</option>
        <option value="3">‚≠ê‚≠ê‚≠ê(–û—Ä—Ç–∞—à–∞)</option>
        <option value="4">‚≠ê‚≠ê‚≠ê‚≠ê(–ñ–∞“õ—Å—ã)</option>
        <option value="5">‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê(”®—Ç–µ –∂–∞“õ—Å—ã)</option>
        </select>            
                
        {rating && parseInt(rating) < 3 && (
        <div>
        <label>–ù–µ —Å–µ–±–µ–ø—Ç—ñ —Ç”©–º–µ–Ω –±–∞“ì–∞–ª–∞–¥—ã“£—ã–∑?</label>
        <textarea value={reason} onChange={(e) => setReason(e.target.value)}></textarea> 
        </div>
        
        )}
                
       {message&& <p style={{color:'red'}}>{message}</p>  }
        <button type="submit">–ñ—ñ–±–µ—Ä—É</button>
      </form> 
     
    </>
  ) 
}
</div>
  );
}

